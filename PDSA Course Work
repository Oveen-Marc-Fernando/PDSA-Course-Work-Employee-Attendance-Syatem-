package pdsa1;
import java.util.Scanner;

class Node {
        int data;
        Node next;
        Node prev; 

        public Node(int data) {
            this.data = data;
            this.next = null;
            this.prev = null;
        }
    }

class link {
        Node head;

        public void insert(int data) {
            Node node = new Node(data);

            if (head == null) {
                head = node;
            } 
            else {
                Node last = head;

                while (last.next != null) {
                    last = last.next;
            }
            last.next = node;
            node.prev = last;
        }
    }

    public void show() {
        Node node = head;
        while (node != null) {
            System.out.println(node.data);
            node = node.next;
        }
    }

    public void insertAtStart(int data) {
        Node node = new Node(data);
        node.next = head;
        if (head != null) {
            head.prev = node;
        }
        head = node;
    }

    public void insertAtMiddle(int index, int data) {
        Node node = new Node(data);

        if (index == 0) {
            insertAtStart(data);
        } else {
            Node current = head;
            for (int i = 0; i < index - 1 && current != null; i++) {
                current = current.next;
            }

            if (current != null) {
                node.next = current.next;
                node.prev = current;
                if (current.next != null) {
                    current.next.prev = node;
                }
                current.next = node;
            }
        }
    }

    public void delete(int index) {
        if (head == null) {
            System.out.println("List is empty");
            return;
        }

        if (index == 0) {
            head = head.next;
            if (head != null) {
                head.prev = null;
            }
        } else {
            Node current = head;
            for (int i = 0; i < index && current != null; i++) {
                current = current.next;
            }

            if (current != null) {
                if (current.prev != null) {
                    current.prev.next = current.next;
                }
                if (current.next != null) {
                    current.next.prev = current.prev;
                }
                System.out.println("Value deleted: " + current.data);
            }
        }
    }
}

public class PDSA1 {
    public static void main(String[] args) {
               
        
        for(int i = 0; i < 5; i++)
        {
            Scanner scanner = new Scanner(System.in);

            String correctUsername1 = "Oveen";
            String correctPassword1 = "tvbm9035";

            String correctUsername2 = "Vinuja";
            String correctPassword2 = "123456";

            System.out.print("Enter username: ");
            String enteredUsername = scanner.nextLine();

            System.out.print("Enter password: ");
            String enteredPassword = scanner.nextLine();

            if ((enteredUsername.equals(correctUsername1) && enteredPassword.equals(correctPassword1)) ||
                (enteredUsername.equals(correctUsername2) && enteredPassword.equals(correctPassword2))) 
            {
                System.out.println("Authentication successful. Welcome, " + enteredUsername + "!");
            
            
                link employeeAttendanceList = new link();

                System.out.print("Enter the number of employees: ");

                int numberOfEmployees = scanner.nextInt();

                    for (int l = 0; l < numberOfEmployees; i++) {

                        System.out.print("Enter attendance for employee " + (i + 1) + ": ");
                        int attendance = scanner.nextInt();
                        employeeAttendanceList.insert(attendance);
                     }

                System.out.println("Initial Employee Attendance List:");
                employeeAttendanceList.show();

                System.out.print("\nEnter attendance to insert at the start: ");
                int attendanceAtStart = scanner.nextInt();
                employeeAttendanceList.insertAtStart(attendanceAtStart);

                System.out.println("\nEmployee Attendance List after insertion at start:");
                employeeAttendanceList.show();

                System.out.print("\nEnter index to insert attendance at middle: ");
                int index = scanner.nextInt();
                System.out.print("Enter attendance to insert at middle: ");
                int attendanceAtMiddle = scanner.nextInt();
                employeeAttendanceList.insertAtMiddle(index, attendanceAtMiddle);

                System.out.println("\nEmployee Attendance List after insertion at middle:");
                employeeAttendanceList.show();

                System.out.print("\nEnter index to delete attendance: ");
                int deleteIndex = scanner.nextInt();
                employeeAttendanceList.delete(deleteIndex);

                System.out.println("\nEmployee Attendance List after deletion:");
                employeeAttendanceList.show();

                scanner.close();
                
                }
            else {
                System.out.println("Authentication failed. Incorrect username or password.");
            }        
        }
    }
}


