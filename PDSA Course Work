package pdsa1;

import java.util.InputMismatchException;
import java.util.Scanner;

class Node {
    int data;
    String name;
    Node next;
    Node prev;

    public Node(int data, String name) {
        this.data = data;
        this.name = name;
        this.next = null;
        this.prev = null;
    }
}

class Link {
    Node head;

    public void insert(int data, String name) throws DuplicateIdException{
        Node node = new Node(data, name);
  
        
        if (isIdAlreadyExists(data)) {
        throw new DuplicateIdException("Employee ID already exists. Please use a different ID.");
    }
        
        if (head == null) {
            head = node;
        } else {
            Node last = head;

            while (last.next != null) {
                last = last.next;
            }
            last.next = node;
            node.prev = last;
        }
    }
    
    private boolean isIdAlreadyExists(int id) {
    Node current = head;
    while (current != null) {
        if (current.data == id) {
            return true;
        }
        current = current.next;
    }
    return false;
}

    public void show() {
        Node node = head;
        int count=1;
        
        System.out.print("Number");
        System.out.print("  ");
        System.out.print("Employee Id");
        System.out.print("  ");
        System.out.println("Names");
        
        while (node != null) {
            System.out.printf("%-60s", " ");
            System.out.print(count+ "       ");
            System.out.print(node.data + "            ");
            System.out.println(node.name);
            node = node.next;
            count++;            
        }     
    }
   
    public void insertAtStart(int data, String name) {
        Node node = new Node(data, name);
        node.next = head;
        if (head != null) {
            head.prev = node;
        }
        head = node;
    }

    public void insertAtMiddle(int index, int data, String name) {
        Node node = new Node(data, name);

        if (index == 0) {
            insertAtStart(data, name);
        } else {
            Node current = head;
            for (int i = 0; i < index - 1 && current != null; i++) {
                current = current.next;
            }

            if (current != null) {
                node.next = current.next;
                node.prev = current;
                if (current.next != null) {
                    current.next.prev = node;
                }
                current.next = node;
            }
        }
    }

    public void delete(int index) throws DeletedIdException {
        if (head == null) {
              throw new DeletedIdException("List is empty");
            }

         if (index < 0) {
              throw new DeletedIdException("Invalid index. Index must be non-negative.");
            }

                 Node current = head;
                 int count = 0;
                 
            while (current != null && count < index) {
            current = current.next;
            count++;
        }

        if (current == null) {
          throw new DeletedIdException("Employee ID not found. Cannot delete.");
        }

             if (current.prev != null) {
                current.prev.next = current.next;
            } 
        
            else {
                head = current.next;
            }

                if (current.next != null) {
                     current.next.prev = current.prev;
                    }

                    System.out.printf("%-60s", " ");
                    System.out.println("Value deleted: " + current.data);
                }
}

class EmployeeDetails
{
    public void show()
    {
        String[] names = {"Kasun", "Nipun", "Aravinda", "Nethra", "Ayesh", "Savindu", "Nadith", "Saman", "Nohim", "Kisara", "Binura", "Gimras", "Rasindu", "Indika", "Nuwan", "Asindu", "Thiwanka", "Heshan", "Rashmika"};
        int[] numbers = {1001, 1002, 3003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020};

        System.out.printf("%-63s", " ");
        System.out.println("Employee Details ");
        System.out.println("");

        System.out.printf("%-60s", " ");
        System.out.printf("%-18s %-18s%n", "EmpId", "Name");
        
        for (int i = 0; i < names.length; i++) {
            System.out.printf("%-60s", " ");
            System.out.printf("%-18s %-18s%n", numbers[i], names[i]);
        }
    }
}

class Company{
    public void show(){
      System.out.printf("%-50s", " ");
      System.out.println("********       John Keells Private Limited       ********");
      System.out.println(" ");
         
      System.out.printf("%-65s", " ");
      System.out.println("  **  Attendance sheet **");
      System.out.println(" ");
      
      System.out.printf("%-60s", " ");
      System.out.println("Login");
            
    }
}            

class DuplicateIdException extends Exception {
    public DuplicateIdException(String message) {
        super(message);
    }
}

class DeletedIdException extends Exception {
    public DeletedIdException(String message) {
        super(message);
    }
}

public class PDSA1 {
    public static void main(String[] args) {
       
        Scanner scanner = new Scanner(System.in);

        Link employeeAttendanceList = new Link();
        Company company= new Company();
        company.show();    
        
        for (int i = 0; i < 5; i++) {
            String correctUsername1 = "Oveen";
            String correctPassword1 = "tvbm9035";

            String correctUsername2 = "vinuja";
            String correctPassword2 = "123456";

            System.out.printf("%-60s", " ");
            System.out.print("Enter username: ");
            String enteredUsername = scanner.nextLine();

            System.out.printf("%-60s", " ");
            System.out.print("Enter password: ");
            String enteredPassword = scanner.nextLine();

            if ((enteredUsername.equals(correctUsername1) && enteredPassword.equals(correctPassword1)) ||
                (enteredUsername.equals(correctUsername2) && enteredPassword.equals(correctPassword2))) {
                System.out.println("");
                
                long loginStartTime = System.currentTimeMillis();
                
                System.out.printf("%-55s", " ");
                System.out.println("Authentication successful. Welcome, " + enteredUsername + "!");
                System.out.println("");
                EmployeeDetails employee= new EmployeeDetails();
                employee.show();
                System.out.println("");               

                for (int p = 0; p < 100; p++) {
                    try {
                        System.out.printf("%-50s", " ");
                        System.out.println("Do you want to : ");
                        System.out.printf("%-50s", " ");
                        System.out.println("1: Insert    2: Delete");
                        System.out.printf("%-50s", " ");
                        System.out.print("Select option:  ");
                        
                        String type = scanner.nextLine();
                                              
                            try { 
                                if (!type.equals("1") && !type.equals("2")) {
                                    
                                   throw new IllegalArgumentException("Invalid selection. Please enter 1 or 2.");                                                                   
                                }
                                
                            }                            
                            
                            catch(NumberFormatException e) {
                                
                                    throw new InputMismatchException("Invalid input. Please enter a number.");
                                    
                            }                                                       
                        
                        if (type.equals("1")) {
                            System.out.printf("%-50s", " ");
                            System.out.print("Enter employee ID : ");
                            if (!scanner.hasNextInt()) {
                                throw new InputMismatchException("Employee ID must be an integer value. ");
                            }
                            
                            
                            int attendance = scanner.nextInt();
                            scanner.nextLine();
                            
                           System.out.printf("%-50s", " ");
                           
                            System.out.print("Enter employee name: ");
                            
                            if (scanner.hasNextInt()) {
                                throw new InputMismatchException("Employee name cannot be an integer value.");             
                            }
                            
                            String employeeName = scanner.nextLine();
                            
                            
                            System.out.printf("%-60s", " ");
                            employeeAttendanceList.insert(attendance, employeeName);
                            System.out.println("");

                            long insertionTime = System.currentTimeMillis() - loginStartTime;

                            System.out.printf("%-58s", " ");
                            System.out.println("Updated Employee Attendance List:");
                            System.out.println("");
                            System.out.printf("%-60s", " ");
                            employeeAttendanceList.show();

                            System.out.println("");
                            System.out.printf("%-58s", " ");
                            System.out.println("Time taken for insertion: " + insertionTime + " milliseconds");

                            System.out.println("");
                            
                        } 
                        
                        else if (type.equals("2")) {
                            
                            System.out.printf("%-50s", " ");
                            
                            System.out.print("Enter the number of deletion: ");
                            
                            if (!scanner.hasNextInt()) {
                                throw new InputMismatchException("Deletion number must be an integer value.");
                                }
                            
                            int deleteIndex = scanner.nextInt();
                            scanner.nextLine();

                            employeeAttendanceList.delete(deleteIndex - 1);
                            System.out.printf("%-50s", " ");
                            System.out.println("Element of Number " + deleteIndex + " deleted.");
                            System.out.println("");
                            System.out.printf("%-58s", " ");
                            System.out.println("Updated Employee Attendance List:");
                            System.out.println("");
                            System.out.printf("%-60s", " ");
                            employeeAttendanceList.show();
                            System.out.println("");
                        }
                          } catch (DuplicateIdException | DeletedIdException | IllegalArgumentException | InputMismatchException e) {
                            System.out.printf("%-55s", " ");
                            System.out.println("Error: " + e.getMessage());
                            System.out.println("");
                            scanner.nextLine();
                    }
                }
            } 
            else {
                System.out.printf("%-55s", " ");
                System.out.println("Authentication failed. Incorrect username or password.");
            }
        }
        scanner.close();
    }
}
